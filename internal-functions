#!/usr/bin/env bash
set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x
_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$_DIR/config"
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$PLUGIN_CORE_AVAILABLE_PATH/common/property-functions"

fn-nginx-custom-log-root() {
  declare desc="get the nginx log root"
  local NGINX_LOG_ROOT="/var/log/nginx"

  fn-nginx-custom-uses-openresty && NGINX_LOG_ROOT="/var/log/openresty"
  echo "$NGINX_LOG_ROOT"
}

fn-nginx-custom-uses-openresty() {
  declare desc="returns whether openresty is in use or not"

  if [[ -x /usr/bin/openresty ]]; then
    return
  fi

  return 1
}

fn-nginx-custom-nginx-location() {
  declare desc="check that nginx is at the expected location and return it"
  local NGINX_LOCATION

  NGINX_LOCATION=$(command -v nginx 2>/dev/null)
  if [[ -z "$NGINX_LOCATION" ]]; then
    NGINX_LOCATION="/usr/sbin/nginx"
  fi

  if fn-nginx-custom-uses-openresty; then
    NGINX_LOCATION="/usr/bin/openresty"
  fi

  if [[ ! -x "$NGINX_LOCATION" ]]; then
    dokku_log_fail "Could not find nginx binary in \$PATH or at '${NGINX_LOCATION}'."
  fi

  echo "$NGINX_LOCATION"
}

fn-get-property() {
  declare desc="get a property from the nginx plugin"

  "$_DIR/nginx-property" --log-root "$(fn-nginx-custom-log-root)"  "$@"
}

fn-nginx-custom-config-file() {
  declare desc="retrieves config file path from config-file property"
  declare APP="$1"
  fn-get-property --app "$APP" --computed "config-file"
}

fn-nginx-custom-config-files-root-dir() {
  declare desc="retrieves config files root dir from config-files-root-dir property"
  declare APP="$1"
  dir=$(fn-get-property --app "$APP" --computed "config-files-root-dir")
  if [[ -z "$dir" ]]; then
    echo "$DOKKU_ROOT/$APP"
  fi
}

fn-nginx-custom-proxy-cache-on-disk-root-path() {
  declare desc="retrieves proxy cache on disk root path from proxy-cache-on-disk-root-path property"
  declare APP="$1"
  fn-get-property --app "$APP" --global "proxy-cache-on-disk-root-path"
}

fn-nginx-custom-proxy-cache-in-mem-root-path() {
  declare desc="retrieves proxy cache in memory root path from proxy-cache-in-mem-root-path property"
  declare APP="$1"
  fn-get-property --app "$APP" --global "proxy-cache-in-mem-root-path"
}

fn-nginx-custom-fastcgi-cache-on-disk-root-path() {
  declare desc="retrieves fastcgi cache on disk root path from fastcgi-cache-on-disk-root-path property"
  declare APP="$1"
 fn-get-property --app "$APP" --global "fastcgi-cache-on-disk-root-path"
}

fn-nginx-custom-fastcgi-cache-in-mem-root-path() {
  declare desc="retrieves fastcgi cache in memory root path from fastcgi-cache-in-mem-root-path property"
  declare APP="$1"
  fn-get-property --app "$APP" --global "fastcgi-cache-in-mem-root-path"
}

fn-nginx-custom-proxy-cache-default-flags() {
  declare desc="retrieves proxy cache default flags from proxy-cache-default-flags property"
  declare APP="$1"
  fn-get-property --app "$APP" --global "proxy-cache-default-flags"
}

fn-nginx-custom-fastcgi-cache-default-flags() {
  declare desc="retrieves fastcgi cache default flags from fastcgi-cache-default-flags property"
  declare APP="$1"
  fn-get-property --app "$APP" --global "fastcgi-cache-default-flags"
}

fn-nginx-custom-proxy-cache-default-key-zone-size() {
  declare desc="retrieves proxy cache key zone size from proxy-cache-default-key-zone-size property"
  declare APP="$1"
  fn-get-property --app "$APP" --global "proxy-cache-key-zone-size"
}

fn-nginx-custom-fastcgi-cache-default-key-zone-size() {
  declare desc="retrieves fastcgi cache key zone size from fastcgi-cache-default-key-zone-size property"
  declare APP="$1"
  fn-get-property --app "$APP" --global "fastcgi-cache-key-zone-size"
}