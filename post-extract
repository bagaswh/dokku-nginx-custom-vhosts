#!/usr/bin/env bash
_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$_DIR/config"
source "$_DIR/internal-functions"
set -eo pipefail
[[ $DOKKU_TRACE ]] && set -x

fn-nginx-custom-copy-from-image() {
  declare APP="$1" IMAGE_NAME="$2" CONF_SIGIL_PATH="$3" DOMAIN="$4" CONF_SCOPE="$5"

  conf_dest_path_base_dir="${DATA_DIRECTORY}/app-$APP/"
  
  whoami
  mkdir -p "$conf_dest_path_base_dir"

  conf_dest_path_filename_prefix="nginx-$CONF_SCOPE.$DOMAIN.conf.sigil"
  conf_dest_path_with_pid="$conf_dest_path_base_dir/$conf_dest_path_filename_prefix.$DOKKU_PID"
  conf_dest_missing_path="$conf_dest_path_with_pid.missing"

  find "$conf_dest_path_base_dir" -maxdepth 1 -type f -name "$conf_dest_path_filename_prefix.*" -delete
  copy_from_image "$IMAGE_NAME" "$CONF_SIGIL_PATH" "$conf_dest_path_with_pid" 2>/dev/null || true

  find "$conf_dest_path_base_dir" -maxdepth 1 -type f -name "$conf_dest_path_filename_prefix.*" -delete
  if [[ -z "$CONF_SIGIL_PATH" ]] || [[ ! -f "$CONF_SIGIL_PATH" ]]; then
    touch "$conf_dest_missing_path"
    return
  fi
}

fn-nginx-custom-copy-from-directory() {
  set -x
  declare APP="$1" SOURCECODE_WORK_DIR="$2" CONF_SIGIL_PATH="$3" DOMAIN="$4" CONF_SCOPE="$5"

  conf_dest_path_base_dir="${DATA_DIRECTORY}/app-$APP/"

  pushd "$SOURCECODE_WORK_DIR" >/dev/null
  mkdir -p "$conf_dest_path_base_dir"

  conf_dest_path_filename_prefix="nginx-$CONF_SCOPE.$DOMAIN.conf.sigil"
  conf_dest_path_with_pid="$conf_dest_path_base_dir/$conf_dest_path_filename_prefix.$DOKKU_PID"
  conf_dest_missing_path="$conf_dest_path_with_pid.missing"

  if [[ -z "$CONF_SIGIL_PATH" ]] || [[ ! -f "$CONF_SIGIL_PATH" ]]; then
    touch "$conf_dest_missing_path"
    return
  fi

  find "$conf_dest_path_base_dir" -maxdepth 1 -type f -name "$conf_dest_path_filename_prefix.*" -delete
  cp -f "$CONF_SIGIL_PATH" "$conf_dest_path_with_pid"
  popd &>/dev/null || pushd "/tmp" >/dev/null
}

trigger-nginx-custom-post-extract() {
  declare desc="${PROXY_NAME} post-extract plugin trigger"
  declare trigger="post-extract"
  declare APP="$1" SOURCECODE_WORK_DIR="$2"
  local app_source_image

  app_source_image="$(plugn trigger git-get-property "$APP" "source-image")"

  local domains=$(plugn trigger domains-list "$APP")

  for domain in $domains; do
    local CONF_SIGIL_PATHS=(
      "location:$(fn-nginx-custom-computed-nginx-conf-location-sigil-path "$APP" "$domain")"
      "server-block:$(fn-nginx-custom-computed_nginx-conf-server-block-sigil-path "$APP" "$domain")"
      "http-block:$(fn-nginx-custom-computed_nginx-conf-http-block-sigil-path "$APP" "$domain")"
    )

    for CONF_SIGIL_PATH_ITEM in "${CONF_SIGIL_PATHS[@]}"; do
      local SCOPE="${CONF_SIGIL_PATH_ITEM%%:*}"
      local CONF_SIGIL_PATH="${CONF_SIGIL_PATH_ITEM#*:}"
      echo "Scope: $SCOPE, Path: $CONF_SIGIL_PATH"
      if [[ -n "$app_source_image" ]]; then
        fn-nginx-custom-copy-from-image "$APP" "$app_source_image" "$CONF_SIGIL_PATH" "$domain" "$SCOPE"
      else
        fn-nginx-custom-copy-from-directory "$APP" "$SOURCECODE_WORK_DIR" "$CONF_SIGIL_PATH" "$domain" "$SCOPE"
      fi
    done
  done
}

trigger-nginx-custom-post-extract "$@"
